name: Project Sync (Prompts + Docs)
on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  project-sync:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install pyyaml pandas

      - name: Run project sync (build + checks)
        run: |
          python project_sync_orchestrator.py

      - name: Generate PR comment
        if: ${{ github.event_name == 'pull_request' }}
        run: |
          python tools/make_pr_comment.py

      - name: Post PR comment
        if: ${{ github.event_name == 'pull_request' }}
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const body = fs.readFileSync('PR_COMMENT.md', 'utf-8');
            const { owner, repo } = context.repo;
            const issue_number = context.issue.number;
            // Find existing bot comment to update (idempotent)
            const { data: comments } = await github.rest.issues.listComments({ owner, repo, issue_number });
            const botTag = "<!-- project-sync-comment -->";
            const prior = comments.find(c => c.user.type === "Bot" && c.body && c.body.includes(botTag));
            const finalBody = body + "\n\n" + botTag;
            if (prior) {
              await github.rest.issues.updateComment({ owner, repo, comment_id: prior.id, body: finalBody });
            } else {
              await github.rest.issues.createComment({ owner, repo, issue_number, body: finalBody });
            }

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: project-sync-artifacts
          path: |
            sync_report.md
            badges_prompt_status.json
            docs/out/doc_sync_report.md
            docs/out/doc_badge.json
            PR_COMMENT.md
